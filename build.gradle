plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.yamyam'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

def querydslVersion = '5.1.0'
def lombokVersion = '1.18.32'
def mapstructVersion = '1.5.5.Final'
def lombokMapStructBindingVersion = '0.2.0'
def commonLangVersion = '3.13.0'
def jsonVersion = '20240303'
def jjwtVersion = '0.12.6'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation "org.springframework.boot:spring-boot-starter-security"
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	implementation "com.querydsl:querydsl-apt:${querydslVersion}"
	implementation "com.querydsl:querydsl-core:${querydslVersion}"

	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	implementation "org.apache.commons:commons-lang3:${commonLangVersion}"
	implementation "org.json:json:${jsonVersion}"

	implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation "org.projectlombok:lombok:${lombokVersion}"
	implementation "org.projectlombok:lombok-mapstruct-binding:${lombokMapStructBindingVersion}"

	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapStructBindingVersion}"

	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.hibernate.validator:hibernate-validator:7.0.2.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.mockito:mockito-core'

	// hibernate-spatial
	implementation 'org.hibernate.orm:hibernate-spatial:6.2.13.Final'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// spring batch
	implementation("org.springframework.boot:spring-boot-starter-batch")
	testImplementation("org.springframework.batch:spring-batch-test")

	// proj4j
	implementation 'org.locationtech.proj4j:proj4j:1.3.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
